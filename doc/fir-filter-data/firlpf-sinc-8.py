#!/usr/bin/env python3
from scipy import signal
import matplotlib.pyplot as plt
import numpy as np

# calculated by make_lanczos_coeff
# filter_order 64, cutoff = 0.45 / 8

b = [ -0.000293872581096, -0.000655018200632, -0.000962681893725, -0.001080220798030, -0.000883250497282, -0.000290155177936, 0.000710577936843, 0.002041882369667, 0.003533344948664, 0.004933207761496, 0.005937688052654, 0.006235257722437, 0.005560709163547, 0.003751534968615, 0.000797862594482, -0.003122895723209, -0.007634129375219, -0.012175693176687, -0.016048353165388, -0.018484070897102, -0.018735146149993, -0.016171880066395, -0.010376339778304, -0.001219309982844, 0.011091087944806, 0.025997621938586, 0.042623106390238, 0.059839386492968, 0.076369792222977, 0.090914033353329, 0.102281272411346, 0.109515525400639, 0.111998260021210, 0.109515525400639, 0.102281272411346, 0.090914033353329, 0.076369792222977, 0.059839386492968, 0.042623106390238, 0.025997621938586, 0.011091087944806, -0.001219309982844, -0.010376339778304, -0.016171880066395, -0.018735146149993, -0.018484070897102, -0.016048353165388, -0.012175693176687, -0.007634129375219, -0.003122895723209, 0.000797862594482, 0.003751534968615, 0.005560709163547, 0.006235257722437, 0.005937688052654, 0.004933207761496, 0.003533344948664, 0.002041882369667, 0.000710577936843, -0.000290155177936, -0.000883250497282, -0.001080220798030, -0.000962681893725, -0.000655018200632, -0.000293872581096]

# plot

w, h = signal.freqz(b)
fig, ax1 = plt.subplots()
ax1.set_title('Digital filter frequency response')
ax1.plot(w, 20 * np.log10(abs(h)), 'b')
ax1.set_ylabel('Amplitude [dB]', color='b')
ax1.set_xlabel('Frequency [rad/sample]')
plt.show()
