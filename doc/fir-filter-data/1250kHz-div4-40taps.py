#!/usr/bin/env python3
from scipy import signal
import matplotlib.pyplot as plt
import numpy as np

b = [
 35.87970404870614520E-6,
 82.47047368361059230E-6,
-48.12379306537796000E-6,
-482.9995532584811140E-6,
-718.8760963665861250E-6,
 274.5163082235173420E-6,
 0.002406825233188235,
 0.002952246082488805,
-0.001264157841993567,
-0.008139532786262166,
-0.008487691224173290,
 0.004651183950422251,
 0.022151128701789556,
 0.020037922568238713,
-0.014761887376560260,
-0.056219427631616276,
-0.046699425606216052,
 0.051713970542716731,
 0.206906836595315807,
 0.325589122929344943,
 0.325589122929344943,
 0.206906836595315807,
 0.051713970542716731,
-0.046699425606216052,
-0.056219427631616276,
-0.014761887376560260,
 0.020037922568238713,
 0.022151128701789556,
 0.004651183950422251,
-0.008487691224173290,
-0.008139532786262166,
-0.001264157841993567,
 0.002952246082488805,
 0.002406825233188235,
 274.5163082235173420E-6,
-718.8760963665861250E-6,
-482.9995532584811140E-6,
-48.12379306537796000E-6,
 82.47047368361059230E-6,
 35.87970404870614520E-6
]

w, h = signal.freqz(b)
fig, ax1 = plt.subplots()
ax1.set_title('Digital filter frequency response')
ax1.plot(w, 20 * np.log10(abs(h)), 'b')
ax1.set_ylabel('Amplitude [dB]', color='b')
ax1.set_xlabel('Frequency [rad/sample]')
plt.show()
