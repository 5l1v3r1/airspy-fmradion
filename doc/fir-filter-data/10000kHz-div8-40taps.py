#!/usr/bin/env python3
from scipy import signal
import matplotlib.pyplot as plt
import numpy as np

b = [
-45.64635244273202370E-6,
-187.2376979948511180E-6,
-520.8447680747166260E-6,
-0.001155514109928603,
-0.002180739879926724,
-0.003607184676876533,
-0.005296287330714829,
-0.006898192495347903,
-0.007824195381173876,
-0.007278798471177861,
-0.004365416477425009,
 0.001739037719816514,
 0.011568668114133512,
 0.025160265782704520,
 0.041909525521273243,
 0.060543015674618131,
 0.079234572549312043,
 0.095859929951414430,
 0.108346582314856110,
 0.115046227703278825,
 0.115046227703278825,
 0.108346582314856110,
 0.095859929951414430,
 0.079234572549312043,
 0.060543015674618131,
 0.041909525521273243,
 0.025160265782704520,
 0.011568668114133512,
 0.001739037719816514,
-0.004365416477425009,
-0.007278798471177861,
-0.007824195381173876,
-0.006898192495347903,
-0.005296287330714829,
-0.003607184676876533,
-0.002180739879926724,
-0.001155514109928603,
-520.8447680747166260E-6,
-187.2376979948511180E-6,
-45.64635244273202370E-6
]

w, h = signal.freqz(b)
fig, ax1 = plt.subplots()
ax1.set_title('Digital filter frequency response')
ax1.plot(w, 20 * np.log10(abs(h)), 'b')
ax1.set_ylabel('Amplitude [dB]', color='b')
ax1.set_xlabel('Frequency [rad/sample]')
plt.show()
